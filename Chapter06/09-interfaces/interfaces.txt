INTERFACES
Interface is a collection of abstract methods and attributes, variating in every single implementation in
different objects.

Interfaces are not instantiable, they're implementable and contain empty methods or constants. Being useful
to replication and abstraction, the content of an interface is a "contract" between the object and the interface.

This contract affirmate the presence of the abstraction into the instantiated object, logically with his own
particularities of implementation (id est, his unique code block variation in contexts).

note: concrete classes are obligated to implement all methods described in the interface implemented in it,
but abstract classes don't need to do it.

examples in: /src/

note:
Creating constants inside an interface, you can omit the modifiers "public static final" as used in one
common class implementation, because JVM understands everything inside an interface as public, static and
final (except methods, who still won't have an implementation).